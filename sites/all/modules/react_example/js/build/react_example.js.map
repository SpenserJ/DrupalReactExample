{"version":3,"sources":["react_example.js","MenuStore.js","MealPlanner.jsx","MenuItem.jsx","MenuList.jsx","main.jsx"],"names":["MenuStore","_store","items","meal","Actions","Reflux","createActions","Store","createStore","listenables","getInitialState","onInitMenu","menu","jQuery","extend","this","trigger","onAddToMeal","id","inArray","push","onRemoveFromMeal","grep","test","get","data","initMenu","MealPlanner","React","createClass","displayName","mixins","connect","render","mealItems","state","store","map","bind","length","item","key","createElement","MenuItem","inMeal","className","props","actionClick","removeFromMeal","addToMeal","name","field_calories","type","disabled","checked","field_brandon_thordarson","value","onClick","MenuList","ids","Object","keys","filter","document","getElementById"],"mappings":"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","file":"react_example.js","sourcesContent":[null,"var MenuStore = {};\n\n(function () {\n  var _store = {\n    // An object full of item ids and their nutritional information.\n    items: {},\n    // An array of items that make up the user's meal.\n    meal: [],\n  };\n\n  MenuStore.Actions = Reflux.createActions([\n    'initMenu',\n    'addToMeal',\n    'removeFromMeal',\n  ]);\n\n  MenuStore.Store = Reflux.createStore({\n    listenables: [MenuStore.Actions],\n\n    getInitialState: function () {\n      return _store;\n    },\n\n    onInitMenu: function (menu) {\n      jQuery.extend(_store.items, menu);\n\n      this.trigger(_store);\n    },\n\n    onAddToMeal: function (id) {\n      // IDs are stored as a string by the JSON.\n      id = '' + id;\n\n      // If the item is already in our meal, ignore it.\n      if (jQuery.inArray(id, _store.meal) !== -1) { return; }\n\n      _store.meal.push(id);\n\n      this.trigger(_store);\n    },\n\n    onRemoveFromMeal: function (id) {\n      // IDs are stored as a string by the JSON.\n      id = '' + id;\n\n      // Remove any item with the same ID from the meal.\n      _store.meal = jQuery.grep(_store.meal, function (test) {\n        return id != test;\n      });\n\n      this.trigger(_store);\n    },\n  });\n})();\n\njQuery.get('/sites/all/modules/react_example/js/data.json', function (data) {\n  MenuStore.Actions.initMenu(data);\n});\n","var MealPlanner = React.createClass({\n  mixins: [Reflux.connect(MenuStore.Store, 'store')],\n\n  render: function () {\n    var mealItems = this.state.store.meal.map(function (id) {\n      return this.state.store.items[id]\n    }.bind(this));\n\n    if (mealItems.length === 0) {\n      return null;\n    }\n\n    var meal = mealItems.map(function (item) {\n      var key = 'menu-item-' + item.id;\n\n      return (\n        <MenuItem key={key} item={item} inMeal='true' />\n      );\n    }.bind(this));\n\n    return (\n      <div className=\"meal-planner\">\n        <h1>Meal Planner</h1>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Calories</td>\n              <td>Brandon Approved?</td>\n            </tr>\n          </thead>\n          <tbody>\n            {meal}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n});\n","var MenuItem = React.createClass({\n  render: function () {\n    var item = this.props.item;\n\n    var inMeal = (typeof this.props.inMeal !== 'undefined' && this.props.inMeal);\n    var actionClick = (inMeal)\n          ? MenuStore.Actions.removeFromMeal.bind(null, item.id)\n          : MenuStore.Actions.addToMeal.bind(null, item.id);\n\n    return (\n      <tr>\n        <td>{item.name}</td>\n        <td>{item.field_calories}</td>\n        <td><input type=\"checkbox\" disabled checked={item.field_brandon_thordarson === '1'} /></td>\n        <td><input type=\"button\" value={inMeal ? 'Remove from meal' : 'Add to meal'} onClick={actionClick} /></td>\n      </tr>\n    );\n  },\n});\n","var MenuList = React.createClass({\n  mixins: [Reflux.connect(MenuStore.Store, 'store')],\n\n  render: function () {\n    var ids = Object.keys(this.state.store.items);\n    ids = ids.filter(function (id) {\n      return jQuery.inArray(id, this.state.store.meal) === -1;\n    }.bind(this));\n    var items = jQuery.map(ids, function (id) {\n      var item = this.state.store.items[id]\n        , key = 'menu-item-' + id;\n\n      return (<MenuItem key={key} item={item}/>);\n    }.bind(this));\n\n    return (\n      <div className=\"menu-items\">\n        <h1>Menu Items</h1>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Calories</td>\n              <td>Brandon Approved?</td>\n            </tr>\n          </thead>\n          <tbody>\n            {items}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n});\n","React.render(\n  <div className=\"menu\">\n    <MealPlanner />\n    <MenuList />\n  </div>,\n  document.getElementById('react-tutorial')\n);\n"],"sourceRoot":"/source/"}