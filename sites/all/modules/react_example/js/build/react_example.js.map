{"version":3,"sources":["react_example.js","MenuStore.js","MealPlanner.jsx","MenuItem.jsx","MenuList.jsx","main.jsx"],"names":["MenuStore","_store","items","meal","Actions","Reflux","createActions","Store","createStore","listenables","getInitialState","onInitMenu","menu","jQuery","extend","this","trigger","onAddToMeal","id","inArray","push","onRemoveFromMeal","grep","test","get","data","initMenu","addToMeal","MealPlanner","React","createClass","displayName","mixins","connect","render","state","store","map","item","key","createElement","MenuItem","bind","className","props","name","field_calories","type","disabled","checked","field_brandon_thordarson","MenuList","ids","Object","keys","document","getElementById"],"mappings":"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","file":"react_example.js","sourcesContent":[null,"var MenuStore = {};\n\n(function () {\n  var _store = {\n    // An object full of item ids and their nutritional information.\n    items: {},\n    // An array of items that make up the user's meal.\n    meal: [],\n  };\n\n  MenuStore.Actions = Reflux.createActions([\n    'initMenu',\n    'addToMeal',\n    'removeFromMeal',\n  ]);\n\n  MenuStore.Store = Reflux.createStore({\n    listenables: [MenuStore.Actions],\n\n    getInitialState: function () {\n      return _store;\n    },\n\n    onInitMenu: function (menu) {\n      jQuery.extend(_store.items, menu);\n\n      this.trigger(_store);\n    },\n\n    onAddToMeal: function (id) {\n      // If the item is already in our meal, ignore it.\n      if (jQuery.inArray(id, _store.meal) !== -1) { return; }\n\n      _store.meal.push(id);\n\n      this.trigger(_store);\n    },\n\n    onRemoveFromMeal: function (id) {\n      // Remove any item with the same ID from the meal.\n      _store.meal = jQuery.grep(_store.meal, function (test) {\n        return id == test;\n      });\n\n      this.trigger(_store);\n    },\n  });\n})();\n\njQuery.get('/sites/all/modules/react_example/js/data.json', function (data) {\n  MenuStore.Actions.initMenu(data);\n  MenuStore.Actions.addToMeal(536);\n});\n","var MealPlanner = React.createClass({\n  mixins: [Reflux.connect(MenuStore.Store, 'store')],\n\n  render: function () {\n    var meal = this.state.store.meal.map(function (id) {\n      var item = this.state.store.items[id]\n        , key = 'menu-item-' + id;\n\n      return (\n        <MenuItem key={key} item={item}/>\n      );\n    }.bind(this));\n\n    return (\n      <div className=\"meal-planner\">\n        <h1>Meal Planner</h1>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Calories</td>\n              <td>Brandon Approved?</td>\n            </tr>\n          </thead>\n          <tbody>\n            {meal}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n});\n","var MenuItem = React.createClass({\n  mixins: [Reflux.connect(MenuStore.Store, 'store')],\n\n  render: function () {\n    var item = this.props.item;\n\n    return (\n      <tr>\n        <td>{item.name}</td>\n        <td>{item.field_calories}</td>\n        <td><input type=\"checkbox\" disabled checked={item.field_brandon_thordarson === '1'} /></td>\n      </tr>\n    );\n  },\n});\n","var MenuList = React.createClass({\n  mixins: [Reflux.connect(MenuStore.Store, 'store')],\n\n  render: function () {\n    var ids = Object.keys(this.state.store.items);\n    var items = jQuery.map(ids, function (id) {\n      var item = this.state.store.items[id]\n        , key = 'menu-item-' + id;\n\n      return (<MenuItem key={key} item={item}/>);\n    }.bind(this));\n\n    return (\n      <div className=\"menu-items\">\n        <h1>Menu Items</h1>\n        <table>\n          <thead>\n            <tr>\n              <td>Name</td>\n              <td>Calories</td>\n              <td>Brandon Approved?</td>\n            </tr>\n          </thead>\n          <tbody>\n            {items}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n});\n","React.render(\n  <div className=\"menu\">\n    <MealPlanner />\n    <MenuList />\n  </div>,\n  document.getElementById('react-tutorial')\n);\n"],"sourceRoot":"/source/"}